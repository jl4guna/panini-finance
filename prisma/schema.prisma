datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String  @id @default(cuid())
  email String  @unique
  name  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password         Password?
  notes            Note[]
  Transaction      Transaction[]
  paymentsSent     Payment[]     @relation("Sender")
  paymentsReceived Payment[]     @relation("Receiver")
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Category {
  id    String  @id @default(cuid())
  name  String
  color String
  icon  String?

  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Transaction Transaction[]
}

model Transaction {
  id          String   @id @default(cuid())
  description String
  amount      Float
  date        DateTime
  panini      Boolean  @default(false)
  notes       String   @default("")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String

  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  categoryId String
}

model Payment {
  id          String  @id @default(cuid())
  description String
  amount      Float
  senderId    String
  receiverId  String
  panini      Boolean @default(false)
  notes       String  @default("")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sender   User @relation(fields: [senderId], references: [id], name: "Sender")
  receiver User @relation(fields: [receiverId], references: [id], name: "Receiver")
}

model Reminder {
  id          String   @id @default(cuid())
  title       String
  description String   @default("")
  date        DateTime
  allDay      Boolean  @default(false)
  color       String   @default("#000000")
  repeat      String   @default("never")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
